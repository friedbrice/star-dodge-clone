// Generated by psc-bundle 0.7.3.0
var PS = { };
(function(exports) {
  /* global exports */
  "use strict";

  //- Semiring -------------------------------------------------------------------

  exports.intAdd = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x + y | 0;
    };
  };

  exports.intMul = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x * y | 0;
    };
  };

  //- Eq -------------------------------------------------------------------------

  exports.refEq = function (r1) {
    return function (r2) {
      return r1 === r2;
    };
  };                                          

  //- BooleanAlgebra -------------------------------------------------------------

  exports.boolOr = function (b1) {
    return function (b2) {
      return b1 || b2;
    };
  };

  exports.boolAnd = function (b1) {
    return function (b2) {
      return b1 && b2;
    };
  };

  exports.boolNot = function (b) {
    return !b;
  };
 
})(PS["Prelude"] = PS["Prelude"] || {});
(function(exports) {
  // Generated by psc version 0.7.3.0
  "use strict";
  var $foreign = PS["Prelude"];
  var Semigroupoid = function (compose) {
      this.compose = compose;
  };
  var Category = function (__superclass_Prelude$dotSemigroupoid_0, id) {
      this["__superclass_Prelude.Semigroupoid_0"] = __superclass_Prelude$dotSemigroupoid_0;
      this.id = id;
  };
  var Functor = function (map) {
      this.map = map;
  };
  var Apply = function (__superclass_Prelude$dotFunctor_0, apply) {
      this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
      this.apply = apply;
  };
  var Applicative = function (__superclass_Prelude$dotApply_0, pure) {
      this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
      this.pure = pure;
  };
  var Bind = function (__superclass_Prelude$dotApply_0, bind) {
      this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
      this.bind = bind;
  };
  var Monad = function (__superclass_Prelude$dotApplicative_0, __superclass_Prelude$dotBind_1) {
      this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
      this["__superclass_Prelude.Bind_1"] = __superclass_Prelude$dotBind_1;
  };
  var Semigroup = function (append) {
      this.append = append;
  };
  var Semiring = function (add, mul, one, zero) {
      this.add = add;
      this.mul = mul;
      this.one = one;
      this.zero = zero;
  };
  var Eq = function (eq) {
      this.eq = eq;
  };
  var Bounded = function (bottom, top) {
      this.bottom = bottom;
      this.top = top;
  };
  var BooleanAlgebra = function (__superclass_Prelude$dotBounded_0, conj, disj, not) {
      this["__superclass_Prelude.Bounded_0"] = __superclass_Prelude$dotBounded_0;
      this.conj = conj;
      this.disj = disj;
      this.not = not;
  };
  var zero = function (dict) {
      return dict.zero;
  };                                                                           
  var unit = {};
  var top = function (dict) {
      return dict.top;
  };                                                                            
  var semiringInt = new Semiring($foreign.intAdd, $foreign.intMul, 1, 0);
  var semigroupoidFn = new Semigroupoid(function (f) {
      return function (g) {
          return function (x) {
              return f(g(x));
          };
      };
  });                 
  var pure = function (dict) {
      return dict.pure;
  };
  var $$return = function (__dict_Applicative_2) {
      return pure(__dict_Applicative_2);
  };
  var otherwise = true;
  var one = function (dict) {
      return dict.one;
  };
  var not = function (dict) {
      return dict.not;
  };
  var mul = function (dict) {
      return dict.mul;
  };
  var map = function (dict) {
      return dict.map;
  };
  var $less$dollar$greater = function (__dict_Functor_5) {
      return map(__dict_Functor_5);
  };
  var id = function (dict) {
      return dict.id;
  };                                                
  var flip = function (f) {
      return function (b) {
          return function (a) {
              return f(a)(b);
          };
      };
  };                
  var eqBoolean = new Eq($foreign.refEq);
  var eq = function (dict) {
      return dict.eq;
  };
  var $eq$eq = function (__dict_Eq_7) {
      return eq(__dict_Eq_7);
  };
  var disj = function (dict) {
      return dict.disj;
  };
  var $$const = function (a) {
      return function (_30) {
          return a;
      };
  };
  var $$void = function (__dict_Functor_12) {
      return function (fa) {
          return $less$dollar$greater(__dict_Functor_12)($$const(unit))(fa);
      };
  };
  var conj = function (dict) {
      return dict.conj;
  };
  var compose = function (dict) {
      return dict.compose;
  };                                                   
  var $less$less$less = function (__dict_Semigroupoid_14) {
      return compose(__dict_Semigroupoid_14);
  };
  var categoryFn = new Category(function () {
      return semigroupoidFn;
  }, function (x) {
      return x;
  });
  var boundedBoolean = new Bounded(false, true);
  var bottom = function (dict) {
      return dict.bottom;
  };
  var booleanAlgebraBoolean = new BooleanAlgebra(function () {
      return boundedBoolean;
  }, $foreign.boolAnd, $foreign.boolOr, $foreign.boolNot);
  var bind = function (dict) {
      return dict.bind;
  }; 
  var apply = function (dict) {
      return dict.apply;
  };
  var $less$times$greater = function (__dict_Apply_25) {
      return apply(__dict_Apply_25);
  };
  var liftA1 = function (__dict_Applicative_26) {
      return function (f) {
          return function (a) {
              return $less$times$greater(__dict_Applicative_26["__superclass_Prelude.Apply_0"]())(pure(__dict_Applicative_26)(f))(a);
          };
      };
  }; 
  var append = function (dict) {
      return dict.append;
  };
  var $less$greater = function (__dict_Semigroup_28) {
      return append(__dict_Semigroup_28);
  };
  var ap = function (__dict_Monad_30) {
      return function (f) {
          return function (a) {
              return bind(__dict_Monad_30["__superclass_Prelude.Bind_1"]())(f)(function (_11) {
                  return bind(__dict_Monad_30["__superclass_Prelude.Bind_1"]())(a)(function (_10) {
                      return $$return(__dict_Monad_30["__superclass_Prelude.Applicative_0"]())(_11(_10));
                  });
              });
          };
      };
  }; 
  var add = function (dict) {
      return dict.add;
  };
  var $plus = function (__dict_Semiring_31) {
      return add(__dict_Semiring_31);
  };
  exports["BooleanAlgebra"] = BooleanAlgebra;
  exports["Bounded"] = Bounded;
  exports["Eq"] = Eq;
  exports["Semiring"] = Semiring;
  exports["Semigroup"] = Semigroup;
  exports["Monad"] = Monad;
  exports["Bind"] = Bind;
  exports["Applicative"] = Applicative;
  exports["Apply"] = Apply;
  exports["Functor"] = Functor;
  exports["Category"] = Category;
  exports["Semigroupoid"] = Semigroupoid;
  exports["not"] = not;
  exports["disj"] = disj;
  exports["conj"] = conj;
  exports["bottom"] = bottom;
  exports["top"] = top;
  exports["=="] = $eq$eq;
  exports["eq"] = eq;
  exports["+"] = $plus;
  exports["one"] = one;
  exports["mul"] = mul;
  exports["zero"] = zero;
  exports["add"] = add;
  exports["<>"] = $less$greater;
  exports["append"] = append;
  exports["ap"] = ap;
  exports["return"] = $$return;
  exports["bind"] = bind;
  exports["liftA1"] = liftA1;
  exports["pure"] = pure;
  exports["<*>"] = $less$times$greater;
  exports["apply"] = apply;
  exports["void"] = $$void;
  exports["<$>"] = $less$dollar$greater;
  exports["map"] = map;
  exports["id"] = id;
  exports["<<<"] = $less$less$less;
  exports["compose"] = compose;
  exports["otherwise"] = otherwise;
  exports["const"] = $$const;
  exports["flip"] = flip;
  exports["unit"] = unit;
  exports["semigroupoidFn"] = semigroupoidFn;
  exports["categoryFn"] = categoryFn;
  exports["semiringInt"] = semiringInt;
  exports["eqBoolean"] = eqBoolean;
  exports["boundedBoolean"] = boundedBoolean;
  exports["booleanAlgebraBoolean"] = booleanAlgebraBoolean;;
 
})(PS["Prelude"] = PS["Prelude"] || {});
(function(exports) {
  // Generated by psc version 0.7.3.0
  "use strict";
  var Prelude = PS["Prelude"];
  var $times$greater = function (__dict_Apply_1) {
      return function (a) {
          return function (b) {
              return Prelude["<*>"](__dict_Apply_1)(Prelude["<$>"](__dict_Apply_1["__superclass_Prelude.Functor_0"]())(Prelude["const"](Prelude.id(Prelude.categoryFn)))(a))(b);
          };
      };
  };
  exports["*>"] = $times$greater;;
 
})(PS["Control.Apply"] = PS["Control.Apply"] || {});
(function(exports) {
  // Generated by psc version 0.7.3.0
  "use strict";
  var Prelude = PS["Prelude"];     
  var Lazy = function (defer) {
      this.defer = defer;
  };
  var defer = function (dict) {
      return dict.defer;
  };
  var fix = function (__dict_Lazy_0) {
      return function (f) {
          return defer(__dict_Lazy_0)(function (_71) {
              return f(fix(__dict_Lazy_0)(f));
          });
      };
  };
  exports["Lazy"] = Lazy;
  exports["fix"] = fix;
  exports["defer"] = defer;;
 
})(PS["Control.Lazy"] = PS["Control.Lazy"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Control.Monad.Eff

  exports.returnE = function (a) {
    return function () {
      return a;
    };
  };

  exports.bindE = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };

  exports.runPure = function (f) {
    return f();
  };
 
})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
(function(exports) {
  // Generated by psc version 0.7.3.0
  "use strict";
  var $foreign = PS["Control.Monad.Eff"];
  var Prelude = PS["Prelude"];     
  var monadEff = new Prelude.Monad(function () {
      return applicativeEff;
  }, function () {
      return bindEff;
  });
  var bindEff = new Prelude.Bind(function () {
      return applyEff;
  }, $foreign.bindE);
  var applyEff = new Prelude.Apply(function () {
      return functorEff;
  }, Prelude.ap(monadEff));
  var applicativeEff = new Prelude.Applicative(function () {
      return applyEff;
  }, $foreign.returnE);
  var functorEff = new Prelude.Functor(Prelude.liftA1(applicativeEff));
  exports["functorEff"] = functorEff;
  exports["applyEff"] = applyEff;
  exports["applicativeEff"] = applicativeEff;
  exports["bindEff"] = bindEff;
  exports["monadEff"] = monadEff;
  exports["runPure"] = $foreign.runPure;;
 
})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Control.Monad.Eff.Random

  exports.random = Math.random;
 
})(PS["Control.Monad.Eff.Random"] = PS["Control.Monad.Eff.Random"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports.toNumber = function (n) {
    return n;
  };
 
})(PS["Data.Int"] = PS["Data.Int"] || {});
(function(exports) {
  /* global exports */
  "use strict";          

  exports.exp = Math.exp;      

  exports.pi = Math.PI;      
 
})(PS["Math"] = PS["Math"] || {});
(function(exports) {
  // Generated by psc version 0.7.3.0
  "use strict";
  var $foreign = PS["Math"];
  exports["pi"] = $foreign.pi;
  exports["exp"] = $foreign.exp;;
 
})(PS["Math"] = PS["Math"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.Maybe.Unsafe

  exports.unsafeThrow = function (msg) {
    throw new Error(msg);
  };
 
})(PS["Data.Maybe.Unsafe"] = PS["Data.Maybe.Unsafe"] || {});
(function(exports) {
  // Generated by psc version 0.7.3.0
  "use strict";
  var Prelude = PS["Prelude"];     
  var Monoid = function (__superclass_Prelude$dotSemigroup_0, mempty) {
      this["__superclass_Prelude.Semigroup_0"] = __superclass_Prelude$dotSemigroup_0;
      this.mempty = mempty;
  };       
  var mempty = function (dict) {
      return dict.mempty;
  };
  exports["Monoid"] = Monoid;
  exports["mempty"] = mempty;;
 
})(PS["Data.Monoid"] = PS["Data.Monoid"] || {});
(function(exports) {
  // Generated by psc version 0.7.3.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Extend = PS["Control.Extend"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Monoid = PS["Data.Monoid"];     
  var Nothing = (function () {
      function Nothing() {

      };
      Nothing.value = new Nothing();
      return Nothing;
  })();
  var Just = (function () {
      function Just(value0) {
          this.value0 = value0;
      };
      Just.create = function (value0) {
          return new Just(value0);
      };
      return Just;
  })();                                             
  var functorMaybe = new Prelude.Functor(function (fn) {
      return function (_181) {
          if (_181 instanceof Just) {
              return new Just(fn(_181.value0));
          };
          return Nothing.value;
      };
  });
  exports["Nothing"] = Nothing;
  exports["Just"] = Just;
  exports["functorMaybe"] = functorMaybe;;
 
})(PS["Data.Maybe"] = PS["Data.Maybe"] || {});
(function(exports) {
  // Generated by psc version 0.7.3.0
  "use strict";
  var $foreign = PS["Data.Maybe.Unsafe"];
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];     
  var fromJust = function (_242) {
      if (_242 instanceof Data_Maybe.Just) {
          return _242.value0;
      };
      if (_242 instanceof Data_Maybe.Nothing) {
          return $foreign.unsafeThrow("Data.Maybe.Unsafe.fromJust called on Nothing");
      };
      throw new Error("Failed pattern match at Data.Maybe.Unsafe line 10, column 1 - line 11, column 1: " + [ _242.constructor.name ]);
  };
  exports["fromJust"] = fromJust;;
 
})(PS["Data.Maybe.Unsafe"] = PS["Data.Maybe.Unsafe"] || {});
(function(exports) {
  // Generated by psc version 0.7.3.0
  "use strict";
  var $foreign = PS["Data.Int"];
  var Prelude = PS["Prelude"];
  var $$Math = PS["Math"];
  var Data_Maybe_Unsafe = PS["Data.Maybe.Unsafe"];
  var Data_Int_Bits = PS["Data.Int.Bits"];
  var Data_Maybe = PS["Data.Maybe"];
  exports["toNumber"] = $foreign.toNumber;;
 
})(PS["Data.Int"] = PS["Data.Int"] || {});
(function(exports) {
  // Generated by psc version 0.7.3.0
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Random"];
  var Prelude = PS["Prelude"];
  var Data_Int = PS["Data.Int"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];     
  var randomRange = function (min) {
      return function (max) {
          return function __do() {
              var _4 = $foreign.random();
              return Prelude["return"](Control_Monad_Eff.applicativeEff)(_4 * (max - min) + min)();
          };
      };
  };
  exports["randomRange"] = randomRange;;
 
})(PS["Control.Monad.Eff.Random"] = PS["Control.Monad.Eff.Random"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Control.Monad.Eff.Ref

  exports.newRef = function (val) {
    return function () {
      return { value: val };
    };
  };

  exports.readRef = function (ref) {
    return function () {
      return ref.value;
    };
  };

  exports["modifyRef'"] = function (ref) {
    return function (f) {
      return function () {
        var t = f(ref.value);
        ref.value = t.state;
        return t.value;
      };
    };
  };
 
})(PS["Control.Monad.Eff.Ref"] = PS["Control.Monad.Eff.Ref"] || {});
(function(exports) {
  // Generated by psc version 0.7.3.0
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Ref"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];     
  var modifyRef = function (ref) {
      return function (f) {
          return $foreign["modifyRef'"](ref)(function (s) {
              return {
                  state: f(s), 
                  value: Prelude.unit
              };
          });
      };
  };
  exports["modifyRef"] = modifyRef;
  exports["readRef"] = $foreign.readRef;
  exports["newRef"] = $foreign.newRef;;
 
})(PS["Control.Monad.Eff.Ref"] = PS["Control.Monad.Eff.Ref"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Control.Monad.Eff.Unsafe

  exports.unsafeInterleaveEff = function (f) {
    return f;
  };
 
})(PS["Control.Monad.Eff.Unsafe"] = PS["Control.Monad.Eff.Unsafe"] || {});
(function(exports) {
  // Generated by psc version 0.7.3.0
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Unsafe"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  exports["unsafeInterleaveEff"] = $foreign.unsafeInterleaveEff;;
 
})(PS["Control.Monad.Eff.Unsafe"] = PS["Control.Monad.Eff.Unsafe"] || {});
(function(exports) {
  /* global exports, window */
  "use strict";

  // module DOM.HTML

  exports.window = function () {
    return window;
  };
 
})(PS["DOM.HTML"] = PS["DOM.HTML"] || {});
(function(exports) {
  // Generated by psc version 0.7.3.0
  "use strict";
  var $foreign = PS["DOM.HTML"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var DOM = PS["DOM"];
  var DOM_HTML_Types = PS["DOM.HTML.Types"];
  exports["window"] = $foreign.window;;
 
})(PS["DOM.HTML"] = PS["DOM.HTML"] || {});
(function(exports) {
  "use strict";

  // module DOM.RequestAnimationFrame 

  var requestAnimationFrame = null;

  // http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/
  exports.requestAnimationFrame_ = function (window_) {
      return function(action) {

          if (!requestAnimationFrame) {
              requestAnimationFrame = (function() {
                  return window_.requestAnimationFrame ||
                      window_.webkitRequestAnimationFrame ||
                      window_.mozRequestAnimationFrame ||
                      function(callback) {
                          window_.setTimeout(callback, 1000 / 60);
                      };
              })();
          }

          return function() {
              return requestAnimationFrame(action);
          };
      }
  };
 
})(PS["DOM.RequestAnimationFrame"] = PS["DOM.RequestAnimationFrame"] || {});
(function(exports) {
  // Generated by psc version 0.7.3.0
  "use strict";
  var $foreign = PS["DOM.RequestAnimationFrame"];
  var Prelude = PS["Prelude"];
  var DOM_HTML = PS["DOM.HTML"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var DOM = PS["DOM"];
  var DOM_HTML_Types = PS["DOM.HTML.Types"];     
  var requestAnimationFrame = function (action) {
      return function __do() {
          var _1 = DOM_HTML.window();
          return $foreign.requestAnimationFrame_(_1)(action)();
      };
  };
  exports["requestAnimationFrame"] = requestAnimationFrame;;
 
})(PS["DOM.RequestAnimationFrame"] = PS["DOM.RequestAnimationFrame"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.Foldable

  exports.foldrArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = len - 1; i >= 0; i--) {
          acc = f(xs[i])(acc);
        }
        return acc;
      };
    };
  };

  exports.foldlArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = 0; i < len; i++) {
          acc = f(acc)(xs[i]);
        }
        return acc;
      };
    };
  };
 
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
  // Generated by psc version 0.7.3.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Data_Monoid = PS["Data.Monoid"];     
  var Disj = function (x) {
      return x;
  };
  var semigroupDisj = function (__dict_BooleanAlgebra_1) {
      return new Prelude.Semigroup(function (_125) {
          return function (_126) {
              return Prelude.disj(__dict_BooleanAlgebra_1)(_125)(_126);
          };
      });
  };
  var runDisj = function (_115) {
      return _115;
  };
  var monoidDisj = function (__dict_BooleanAlgebra_3) {
      return new Data_Monoid.Monoid(function () {
          return semigroupDisj(__dict_BooleanAlgebra_3);
      }, Prelude.bottom(__dict_BooleanAlgebra_3["__superclass_Prelude.Bounded_0"]()));
  };
  exports["Disj"] = Disj;
  exports["runDisj"] = runDisj;
  exports["semigroupDisj"] = semigroupDisj;
  exports["monoidDisj"] = monoidDisj;;
 
})(PS["Data.Monoid.Disj"] = PS["Data.Monoid.Disj"] || {});
(function(exports) {
  // Generated by psc version 0.7.3.0
  "use strict";
  var $foreign = PS["Data.Foldable"];
  var Prelude = PS["Prelude"];
  var Data_Monoid = PS["Data.Monoid"];
  var Control_Apply = PS["Control.Apply"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Maybe_Last = PS["Data.Maybe.Last"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];     
  var Foldable = function (foldMap, foldl, foldr) {
      this.foldMap = foldMap;
      this.foldl = foldl;
      this.foldr = foldr;
  };
  var foldr = function (dict) {
      return dict.foldr;
  };
  var traverse_ = function (__dict_Applicative_0) {
      return function (__dict_Foldable_1) {
          return function (f) {
              return foldr(__dict_Foldable_1)(Prelude["<<<"](Prelude.semigroupoidFn)(Control_Apply["*>"](__dict_Applicative_0["__superclass_Prelude.Apply_0"]()))(f))(Prelude.pure(__dict_Applicative_0)(Prelude.unit));
          };
      };
  };
  var for_ = function (__dict_Applicative_2) {
      return function (__dict_Foldable_3) {
          return Prelude.flip(traverse_(__dict_Applicative_2)(__dict_Foldable_3));
      };
  };
  var foldl = function (dict) {
      return dict.foldl;
  }; 
  var foldableArray = new Foldable(function (__dict_Monoid_19) {
      return function (f) {
          return function (xs) {
              return foldr(foldableArray)(function (x) {
                  return function (acc) {
                      return Prelude["<>"](__dict_Monoid_19["__superclass_Prelude.Semigroup_0"]())(f(x))(acc);
                  };
              })(Data_Monoid.mempty(__dict_Monoid_19))(xs);
          };
      };
  }, $foreign.foldlArray, $foreign.foldrArray);
  var foldMap = function (dict) {
      return dict.foldMap;
  };
  var any = function (__dict_Foldable_26) {
      return function (__dict_BooleanAlgebra_27) {
          return function (p) {
              return Prelude["<<<"](Prelude.semigroupoidFn)(Data_Monoid_Disj.runDisj)(foldMap(__dict_Foldable_26)(Data_Monoid_Disj.monoidDisj(__dict_BooleanAlgebra_27))(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Monoid_Disj.Disj)(p)));
          };
      };
  };
  exports["Foldable"] = Foldable;
  exports["any"] = any;
  exports["for_"] = for_;
  exports["traverse_"] = traverse_;
  exports["foldMap"] = foldMap;
  exports["foldl"] = foldl;
  exports["foldr"] = foldr;
  exports["foldableArray"] = foldableArray;;
 
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.Lazy

  exports.defer = function () {

    function Defer (thunk) {
      if (this instanceof Defer) {
        this.thunk = thunk;
        return this;
      } else {
        return new Defer(thunk);
      }
    }

    Defer.prototype.force = function () {
      var value = this.thunk();
      delete this.thunk;
      this.force = function () {
        return value;
      };
      return value;
    };

    return Defer;

  }();

  exports.force = function (l) {
    return l.force();
  };
 
})(PS["Data.Lazy"] = PS["Data.Lazy"] || {});
(function(exports) {
  // Generated by psc version 0.7.3.0
  "use strict";
  var $foreign = PS["Data.Lazy"];
  var Prelude = PS["Prelude"];
  var Data_Monoid = PS["Data.Monoid"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Lazy = PS["Control.Lazy"];
  var functorLazy = new Prelude.Functor(function (f) {
      return function (l) {
          return $foreign.defer(function (_83) {
              return f($foreign.force(l));
          });
      };
  });
  exports["functorLazy"] = functorLazy;
  exports["force"] = $foreign.force;
  exports["defer"] = $foreign.defer;;
 
})(PS["Data.Lazy"] = PS["Data.Lazy"] || {});
(function(exports) {
  // Generated by psc version 0.7.3.0
  "use strict";
  var $foreign = PS["Data.Traversable"];
  var Prelude = PS["Prelude"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Maybe_Last = PS["Data.Maybe.Last"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Traversable = function (__superclass_Data$dotFoldable$dotFoldable_1, __superclass_Prelude$dotFunctor_0, sequence, traverse) {
      this["__superclass_Data.Foldable.Foldable_1"] = __superclass_Data$dotFoldable$dotFoldable_1;
      this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
      this.sequence = sequence;
      this.traverse = traverse;
  };
  var traverse = function (dict) {
      return dict.traverse;
  };
  var sequence = function (dict) {
      return dict.sequence;
  }; 
  var $$for = function (__dict_Applicative_22) {
      return function (__dict_Traversable_23) {
          return function (x) {
              return function (f) {
                  return traverse(__dict_Traversable_23)(__dict_Applicative_22)(f)(x);
              };
          };
      };
  };
  exports["Traversable"] = Traversable;
  exports["for"] = $$for;
  exports["sequence"] = sequence;
  exports["traverse"] = traverse;;
 
})(PS["Data.Traversable"] = PS["Data.Traversable"] || {});
(function(exports) {
  // Generated by psc version 0.7.3.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Control_Lazy = PS["Control.Lazy"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Foldable = PS["Data.Foldable"];
  var Control_Biapplicative = PS["Control.Biapplicative"];
  var Control_Biapply = PS["Control.Biapply"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Data_Bifoldable = PS["Data.Bifoldable"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Bitraversable = PS["Data.Bitraversable"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Traversable = PS["Data.Traversable"];     
  var Tuple = (function () {
      function Tuple(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Tuple.create = function (value0) {
          return function (value1) {
              return new Tuple(value0, value1);
          };
      };
      return Tuple;
  })();
  exports["Tuple"] = Tuple;;
 
})(PS["Data.Tuple"] = PS["Data.Tuple"] || {});
(function(exports) {
  // Generated by psc version 0.7.3.0
  "use strict";
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Prelude = PS["Prelude"];
  var Data_Foldable = PS["Data.Foldable"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Alt = PS["Control.Alt"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Tuple = PS["Data.Tuple"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_MonadPlus = PS["Control.MonadPlus"];     
  var Nil = (function () {
      function Nil() {

      };
      Nil.value = new Nil();
      return Nil;
  })();
  var Cons = (function () {
      function Cons(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Cons.create = function (value0) {
          return function (value1) {
              return new Cons(value0, value1);
          };
      };
      return Cons;
  })();
  var toList = function (__dict_Foldable_3) {
      return Data_Foldable.foldr(__dict_Foldable_3)(Cons.create)(Nil.value);
  };
  var singleton = function (a) {
      return new Cons(a, Nil.value);
  };
  var semigroupList = new Prelude.Semigroup(function (_103) {
      return function (ys) {
          if (_103 instanceof Nil) {
              return ys;
          };
          if (_103 instanceof Cons) {
              return new Cons(_103.value0, Prelude["<>"](semigroupList)(_103.value1)(ys));
          };
          throw new Error("Failed pattern match: " + [ _103.constructor.name, ys.constructor.name ]);
      };
  });
  var range = function (start) {
      return function (end) {
          if (start === end) {
              return singleton(start);
          };
          if (Prelude.otherwise) {
              var go = function (__copy_s) {
                  return function (__copy_e) {
                      return function (__copy_step) {
                          return function (__copy_rest) {
                              var s = __copy_s;
                              var e = __copy_e;
                              var step = __copy_step;
                              var rest = __copy_rest;
                              tco: while (true) {
                                  if (s === e) {
                                      return new Cons(s, rest);
                                  };
                                  if (Prelude.otherwise) {
                                      var __tco_s = s + step | 0;
                                      var __tco_e = e;
                                      var __tco_step = step;
                                      var __tco_rest = new Cons(s, rest);
                                      s = __tco_s;
                                      e = __tco_e;
                                      step = __tco_step;
                                      rest = __tco_rest;
                                      continue tco;
                                  };
                                  throw new Error("Failed pattern match at Data.List line 137, column 1 - line 138, column 1: " + [ s.constructor.name, e.constructor.name, step.constructor.name, rest.constructor.name ]);
                              };
                          };
                      };
                  };
              };
              return go(end)(start)((function () {
                  var _375 = start > end;
                  if (_375) {
                      return 1;
                  };
                  if (!_375) {
                      return -1;
                  };
                  throw new Error("Failed pattern match at Data.List line 137, column 1 - line 138, column 1: " + [ _375.constructor.name ]);
              })())(Nil.value);
          };
          throw new Error("Failed pattern match at Data.List line 137, column 1 - line 138, column 1: " + [ start.constructor.name, end.constructor.name ]);
      };
  };
  var $dot$dot = range;
  var functorList = new Prelude.Functor(function (f) {
      return function (_104) {
          if (_104 instanceof Nil) {
              return Nil.value;
          };
          if (_104 instanceof Cons) {
              return new Cons(f(_104.value0), Prelude["<$>"](functorList)(f)(_104.value1));
          };
          throw new Error("Failed pattern match: " + [ f.constructor.name, _104.constructor.name ]);
      };
  });
  var foldableList = new Data_Foldable.Foldable(function (__dict_Monoid_16) {
      return function (f) {
          return function (_107) {
              if (_107 instanceof Nil) {
                  return Data_Monoid.mempty(__dict_Monoid_16);
              };
              if (_107 instanceof Cons) {
                  return Prelude["<>"](__dict_Monoid_16["__superclass_Prelude.Semigroup_0"]())(f(_107.value0))(Data_Foldable.foldMap(foldableList)(__dict_Monoid_16)(f)(_107.value1));
              };
              throw new Error("Failed pattern match: " + [ f.constructor.name, _107.constructor.name ]);
          };
      };
  }, function (o) {
      return function (b) {
          return function (_106) {
              if (_106 instanceof Nil) {
                  return b;
              };
              if (_106 instanceof Cons) {
                  return Data_Foldable.foldl(foldableList)(o)(o(b)(_106.value0))(_106.value1);
              };
              throw new Error("Failed pattern match: " + [ o.constructor.name, b.constructor.name, _106.constructor.name ]);
          };
      };
  }, function (o) {
      return function (b) {
          return function (_105) {
              if (_105 instanceof Nil) {
                  return b;
              };
              if (_105 instanceof Cons) {
                  return o(_105.value0)(Data_Foldable.foldr(foldableList)(o)(b)(_105.value1));
              };
              throw new Error("Failed pattern match: " + [ o.constructor.name, b.constructor.name, _105.constructor.name ]);
          };
      };
  });
  var traversableList = new Data_Traversable.Traversable(function () {
      return foldableList;
  }, function () {
      return functorList;
  }, function (__dict_Applicative_2) {
      return function (_110) {
          if (_110 instanceof Nil) {
              return Prelude.pure(__dict_Applicative_2)(Nil.value);
          };
          if (_110 instanceof Cons) {
              return Prelude["<*>"](__dict_Applicative_2["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_2["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Cons.create)(_110.value0))(Data_Traversable.sequence(traversableList)(__dict_Applicative_2)(_110.value1));
          };
          throw new Error("Failed pattern match: " + [ _110.constructor.name ]);
      };
  }, function (__dict_Applicative_1) {
      return function (f) {
          return function (_109) {
              if (_109 instanceof Nil) {
                  return Prelude.pure(__dict_Applicative_1)(Nil.value);
              };
              if (_109 instanceof Cons) {
                  return Prelude["<*>"](__dict_Applicative_1["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_1["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Cons.create)(f(_109.value0)))(Data_Traversable.traverse(traversableList)(__dict_Applicative_1)(f)(_109.value1));
              };
              throw new Error("Failed pattern match: " + [ f.constructor.name, _109.constructor.name ]);
          };
      };
  });                                                      
  var applyList = new Prelude.Apply(function () {
      return functorList;
  }, function (_111) {
      return function (xs) {
          if (_111 instanceof Nil) {
              return Nil.value;
          };
          if (_111 instanceof Cons) {
              return Prelude["<>"](semigroupList)(Prelude["<$>"](functorList)(_111.value0)(xs))(Prelude["<*>"](applyList)(_111.value1)(xs));
          };
          throw new Error("Failed pattern match: " + [ _111.constructor.name, xs.constructor.name ]);
      };
  });
  exports["Nil"] = Nil;
  exports["Cons"] = Cons;
  exports["range"] = range;
  exports[".."] = $dot$dot;
  exports["singleton"] = singleton;
  exports["toList"] = toList;
  exports["semigroupList"] = semigroupList;
  exports["functorList"] = functorList;
  exports["foldableList"] = foldableList;
  exports["traversableList"] = traversableList;
  exports["applyList"] = applyList;;
 
})(PS["Data.List"] = PS["Data.List"] || {});
(function(exports) {
  // Generated by psc version 0.7.3.0
  "use strict";
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Prelude = PS["Prelude"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Lazy = PS["Data.Lazy"];
  var Control_Lazy = PS["Control.Lazy"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Traversable = PS["Data.Traversable"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Tuple = PS["Data.Tuple"];     
  var List = function (x) {
      return x;
  };
  var Nil = (function () {
      function Nil() {

      };
      Nil.value = new Nil();
      return Nil;
  })();
  var Cons = (function () {
      function Cons(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Cons.create = function (value0) {
          return function (value1) {
              return new Cons(value0, value1);
          };
      };
      return Cons;
  })();
  var runList = function (_119) {
      return _119;
  };
  var step = Prelude["<<<"](Prelude.semigroupoidFn)(Data_Lazy.force)(runList);
  var uncons = function (xs) {
      var _555 = step(xs);
      if (_555 instanceof Nil) {
          return Data_Maybe.Nothing.value;
      };
      if (_555 instanceof Cons) {
          return new Data_Maybe.Just({
              head: _555.value0, 
              tail: _555.value1
          });
      };
      throw new Error("Failed pattern match at Data.List.Lazy line 278, column 1 - line 279, column 1: " + [ _555.constructor.name ]);
  };
  var tail = function (xs) {
      return Prelude["<$>"](Data_Maybe.functorMaybe)(function (_1) {
          return _1.tail;
      })(uncons(xs));
  };
  var lazyList = new Control_Lazy.Lazy(function (f) {
      return List(Data_Lazy.defer(Prelude["<<<"](Prelude.semigroupoidFn)(step)(f)));
  });                    
  var head = function (xs) {
      return Prelude["<$>"](Data_Maybe.functorMaybe)(function (_0) {
          return _0.head;
      })(uncons(xs));
  };
  var functorList = new Prelude.Functor(function (f) {
      return function (xs) {
          var go = function (_155) {
              if (_155 instanceof Nil) {
                  return Nil.value;
              };
              if (_155 instanceof Cons) {
                  return new Cons(f(_155.value0), Prelude["<$>"](functorList)(f)(_155.value1));
              };
              throw new Error("Failed pattern match at Data.List.Lazy line 671, column 5 - line 672, column 5: " + [ _155.constructor.name ]);
          };
          return Prelude["<$>"](Data_Lazy.functorLazy)(go)(runList(xs));
      };
  });
  var cons = function (x) {
      return function (xs) {
          return List(Data_Lazy.defer(function (_117) {
              return new Cons(x, xs);
          }));
      };
  };
  var iterate = function (f) {
      return function (x) {
          return Control_Lazy.fix(lazyList)(function (xs) {
              return cons(x)(Prelude["<$>"](functorList)(f)(xs));
          });
      };
  };
  exports["Nil"] = Nil;
  exports["Cons"] = Cons;
  exports["List"] = List;
  exports["uncons"] = uncons;
  exports["tail"] = tail;
  exports["head"] = head;
  exports["cons"] = cons;
  exports["iterate"] = iterate;
  exports["step"] = step;
  exports["runList"] = runList;
  exports["lazyList"] = lazyList;
  exports["functorList"] = functorList;;
 
})(PS["Data.List.Lazy"] = PS["Data.List.Lazy"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports.getCanvasElementByIdImpl = function(id, Just, Nothing) {
      return function() {
          var el = document.getElementById(id);
          if (el && el instanceof HTMLCanvasElement) {
              return Just(el);
          } else {
              return Nothing;
          }
      };
  };

  exports.getContext2D = function(c) {
      return function() {
          return c.getContext('2d');
      };
  };

  exports.setLineWidth = function(width) {
      return function(ctx) {
          return function() {
              ctx.lineWidth = width;
              return ctx;
          };
      };
  };

  exports.setFillStyle = function(style) {
      return function(ctx) {
          return function() {
              ctx.fillStyle = style;
              return ctx;
          };
      };
  };

  exports.setStrokeStyle = function(style) {
      return function(ctx) {
          return function() {
              ctx.strokeStyle = style;
              return ctx;
          };
      };
  };

  exports.beginPath = function(ctx) {
      return function() {
          ctx.beginPath();
          return ctx;
      };
  };

  exports.stroke = function(ctx) {
      return function() {
          ctx.stroke();
          return ctx;
      };
  };

  exports.fill = function(ctx) {
      return function() {
          ctx.fill();
          return ctx;
      };
  };

  exports.lineTo = function(ctx) {
      return function(x) {
          return function(y) {
              return function() {
                  ctx.lineTo(x, y);
                  return ctx;
              };
          };
      };
  };

  exports.moveTo = function(ctx) {
      return function(x) {
          return function(y) {
              return function() {
                  ctx.moveTo(x, y);
                  return ctx;
              };
          };
      };
  };

  exports.closePath = function(ctx) {
      return function() {
          ctx.closePath();
          return ctx;
      };
  };

  exports.arc = function(ctx) {
      return function(a) {
          return function() {
              ctx.arc(a.x, a.y, a.r, a.start, a.end);
              return ctx;
          };
      };
  };

  exports.fillRect = function(ctx) {
      return function(r) {
          return function() {
              ctx.fillRect(r.x, r.y, r.w, r.h);
              return ctx;
          };
      };
  };

  exports.strokeRect = function(ctx) {
      return function(r) {
          return function() {
              ctx.strokeRect(r.x, r.y, r.w, r.h);
              return ctx;
          };
      };
  };

  exports.scale = function(t) {
      return function(ctx) {
          return function() {
              ctx.scale(t.scaleX, t.scaleY);
              return ctx;
          };
      };
  };

  exports.translate = function(t) {
      return function(ctx) {
          return function() {
              ctx.translate(t.translateX, t.translateY);
              return ctx;
          };
      };
  };
 
})(PS["Graphics.Canvas"] = PS["Graphics.Canvas"] || {});
(function(exports) {
  // Generated by psc version 0.7.3.0
  "use strict";
  var $foreign = PS["Graphics.Canvas"];
  var Data_Function = PS["Data.Function"];
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var strokePath = function (ctx) {
      return function (path) {
          return function __do() {
              $foreign.beginPath(ctx)();
              var _23 = path();
              $foreign.stroke(ctx)();
              return Prelude["return"](Control_Monad_Eff.applicativeEff)(_23)();
          };
      };
  };
  var getCanvasElementById = function (elId) {
      return $foreign.getCanvasElementByIdImpl(elId, Data_Maybe.Just.create, Data_Maybe.Nothing.value);
  };
  var fillPath = function (ctx) {
      return function (path) {
          return function __do() {
              $foreign.beginPath(ctx)();
              var _24 = path();
              $foreign.fill(ctx)();
              return Prelude["return"](Control_Monad_Eff.applicativeEff)(_24)();
          };
      };
  };
  exports["fillPath"] = fillPath;
  exports["strokePath"] = strokePath;
  exports["getCanvasElementById"] = getCanvasElementById;
  exports["translate"] = $foreign.translate;
  exports["scale"] = $foreign.scale;
  exports["strokeRect"] = $foreign.strokeRect;
  exports["fillRect"] = $foreign.fillRect;
  exports["arc"] = $foreign.arc;
  exports["closePath"] = $foreign.closePath;
  exports["moveTo"] = $foreign.moveTo;
  exports["lineTo"] = $foreign.lineTo;
  exports["stroke"] = $foreign.stroke;
  exports["beginPath"] = $foreign.beginPath;
  exports["setStrokeStyle"] = $foreign.setStrokeStyle;
  exports["setFillStyle"] = $foreign.setFillStyle;
  exports["setLineWidth"] = $foreign.setLineWidth;
  exports["getContext2D"] = $foreign.getContext2D;;
 
})(PS["Graphics.Canvas"] = PS["Graphics.Canvas"] || {});
(function(exports) {
  "use strict";

  // module Main

  exports.onSpaceBar = function(f) {
    
      return function() {
        
          window.addEventListener("keydown", function(e) {
              if (e.keyCode === 32) {
                  f(true)();
              }
          }, false);
          window.addEventListener("keyup", function(e) {
              if (e.keyCode === 32) {
                  f(false)();
              }
          }, false);
      };
  };
})(PS["Main"] = PS["Main"] || {});
(function(exports) {
  // Generated by psc version 0.7.3.0
  "use strict";
  var $foreign = PS["Main"];
  var Prelude = PS["Prelude"];
  var $$Math = PS["Math"];
  var Data_Int = PS["Data.Int"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Unsafe = PS["Control.Monad.Eff.Unsafe"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_List = PS["Data.List"];
  var Control_Monad_Eff_Random = PS["Control.Monad.Eff.Random"];
  var Data_List_Lazy = PS["Data.List.Lazy"];
  var Graphics_Canvas = PS["Graphics.Canvas"];
  var Control_Monad_Eff_Ref = PS["Control.Monad.Eff.Ref"];
  var Data_Maybe_Unsafe = PS["Data.Maybe.Unsafe"];
  var Data_Foldable = PS["Data.Foldable"];
  var DOM_RequestAnimationFrame = PS["DOM.RequestAnimationFrame"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Either = PS["Data.Either"];
  var Data_Functor = PS["Data.Functor"];
  var DOM = PS["DOM"];     
  var Up = (function () {
      function Up() {

      };
      Up.value = new Up();
      return Up;
  })();
  var Down = (function () {
      function Down() {

      };
      Down.value = new Down();
      return Down;
  })();
  var Playing = (function () {
      function Playing(value0) {
          this.value0 = value0;
      };
      Playing.create = function (value0) {
          return new Playing(value0);
      };
      return Playing;
  })();
  var Waiting = (function () {
      function Waiting(value0) {
          this.value0 = value0;
      };
      Waiting.create = function (value0) {
          return new Waiting(value0);
      };
      return Waiting;
  })();
  var subtract = function (p1) {
      return function (p2) {
          return {
              x: p1.x - p2.x, 
              y: p1.y - p2.y
          };
      };
  };
  var len2 = function (p) {
      return p.x * p.x + p.y * p.y;
  };
  var eqDirection = new Prelude.Eq(function (_10) {
      return function (_11) {
          if (_10 instanceof Up && _11 instanceof Up) {
              return true;
          };
          if (_10 instanceof Down && _11 instanceof Down) {
              return true;
          };
          return false;
      };
  });
  var dist2 = function (p1) {
      return function (p2) {
          return len2(subtract(p2)(p1));
      };
  };
  var decay = function (at0) {
      return function (at7) {
          return function (n) {
              return (1.0 - $$Math.exp(-Data_Int.toNumber(n) / 2.5)) * (at7 - at0) + at0;
          };
      };
  };
  var unsafeLevel = function (level) {
      var unsafePure = Prelude["<<<"](Prelude.semigroupoidFn)(Control_Monad_Eff.runPure)(Control_Monad_Eff_Unsafe.unsafeInterleaveEff);
      return unsafePure((function () {
          var speed = decay(1.8e-3)(2.5e-3)(level);
          var r = decay(5.0e-3)(2.0e-2)(level);
          var door = decay(0.13999999999999999)(4.0e-2)(level);
          return function __do() {
              var _4 = Data_Traversable["for"](Control_Monad_Eff.applicativeEff)(Data_List.traversableList)(Prelude["<*>"](Data_List.applyList)(Prelude["<$>"](Data_List.functorList)(Data_Tuple.Tuple.create)(Data_List[".."](0)(8)))(Data_List[".."](2)(6)))(function (_9) {
                  return function __do() {
                      var _3 = Control_Monad_Eff_Random.randomRange(-2.5e-2)(2.5e-2)();
                      var _2 = Control_Monad_Eff_Random.randomRange(-2.5e-2)(2.5e-2)();
                      return Prelude["return"](Control_Monad_Eff.applicativeEff)({
                          x: 0.15 + (Data_Int.toNumber(_9.value0) * 0.7) / 8.0 + _3, 
                          y: 0.15 + (Data_Int.toNumber(_9.value1) * 0.7) / 8.0 + _2, 
                          r: r
                      })();
                  };
              })();
              return Prelude["return"](Control_Monad_Eff.applicativeEff)({
                  stars: _4, 
                  door: door, 
                  speed: speed
              })();
          };
      })());
  };
  var levels = Prelude["<$>"](Data_List_Lazy.functorList)(unsafeLevel)(Data_List_Lazy.iterate(Prelude["+"](Prelude.semiringInt)(1))(0));
  var main = function __do() {
      var _8 = Graphics_Canvas.getCanvasElementById("canvas")();
      if (_8 instanceof Data_Maybe.Just) {
          var _7 = Graphics_Canvas.getContext2D(_8.value0)();
          var _6 = Control_Monad_Eff_Ref.newRef({
              space: false
          })();
          $foreign.onSpaceBar(function (b) {
              return Control_Monad_Eff_Ref.modifyRef(_6)(function (_0) {
                  var _27 = {};
                  for (var _28 in _0) {
                      if (_0.hasOwnProperty(_28)) {
                          _27[_28] = _0[_28];
                      };
                  };
                  _27.space = b;
                  return _27;
              });
          })();
          Graphics_Canvas.translate({
              translateX: 0.0, 
              translateY: -170.0
          })(_7)();
          Graphics_Canvas.scale({
              scaleX: 800.0, 
              scaleY: 800.0
          })(_7)();
          Graphics_Canvas.setLineWidth(1.0e-3)(_7)();
          var testCollision = function (level) {
              return function (_13) {
                  if (_13 instanceof Data_List.Cons && _13.value1 instanceof Data_List.Cons) {
                      if (_13.value0.y <= 0.25) {
                          return true;
                      };
                      if (_13.value0.y >= 0.75) {
                          return true;
                      };
                      if (_13.value0.x > 0.95 && (_13.value0.y < 0.5 - level.door / 2.0 || _13.value0.y > 0.5 + level.door / 2.0)) {
                          return true;
                      };
                      if (Data_Foldable.any(Data_List.foldableList)(Prelude.booleanAlgebraBoolean)(function (star) {
                          return dist2(_13.value0)(star) < star.r * star.r;
                      })(level.stars)) {
                          return true;
                      };
                      if (Prelude.otherwise) {
                          return false;
                      };
                  };
                  throw new Error("Failed pattern match at Main line 201, column 7 - line 202, column 7: " + [ level.constructor.name, _13.constructor.name ]);
              };
          };
          var renderPath = function (path) {
              return function __do() {
                  Graphics_Canvas.setStrokeStyle("lightgreen")(_7)();
                  if (path instanceof Data_List.Cons) {
                      return Prelude["void"](Control_Monad_Eff.functorEff)(function __do() {
                          Graphics_Canvas.beginPath(_7)();
                          Graphics_Canvas.moveTo(_7)(path.value0.x)(path.value0.y)();
                          Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_List.foldableList)(path.value1)(function (p) {
                              return Graphics_Canvas.lineTo(_7)(p.x)(p.y);
                          })();
                          return Graphics_Canvas.stroke(_7)();
                      })();
                  };
                  return Prelude["return"](Control_Monad_Eff.applicativeEff)(Prelude.unit)();
              };
          };
          var playing = function (path) {
              return function (levels_1) {
                  return function (inputs) {
                      return new Playing({
                          path: path, 
                          level: levels_1, 
                          direction: (function () {
                              if (inputs.space) {
                                  return Up.value;
                              };
                              if (!inputs.space) {
                                  return Down.value;
                              };
                              throw new Error("Failed pattern match at Main line 103, column 1 - line 215, column 28: " + [ inputs.space.constructor.name ]);
                          })()
                      });
                  };
              };
          };
          var newGame = function (levels_1) {
              var p = {
                  x: 5.0e-2, 
                  y: 0.5
              };
              return new Playing({
                  path: Data_List.toList(Data_Foldable.foldableArray)([ p, p ]), 
                  direction: Down.value, 
                  level: levels_1
              });
          };
          var move = function (level) {
              return function (pt) {
                  return function (space) {
                      if (pt.x >= 0.95 - level.speed && (pt.y >= 0.5 - level.door / 2.0 && pt.y <= 0.5 + level.door / 2.0)) {
                          return Data_Maybe.Nothing.value;
                      };
                      if (Prelude.otherwise) {
                          var dy = (function () {
                              if (space) {
                                  return 1.0;
                              };
                              if (!space) {
                                  return -1.0;
                              };
                              throw new Error("Failed pattern match at Main line 157, column 17 - line 158, column 13: " + [ space.constructor.name ]);
                          })();
                          return new Data_Maybe.Just({
                              x: pt.x + level.speed, 
                              y: pt.y + dy * level.speed
                          });
                      };
                      throw new Error("Failed pattern match at Main line 103, column 1 - line 215, column 28: " + [ level.constructor.name, pt.constructor.name, space.constructor.name ]);
                  };
              };
          };
          var initialState = function (levels_1) {
              return new Waiting({
                  path: Data_List.Nil.value, 
                  nextLevel: levels_1
              });
          };
          var update = function (inputs) {
              return function (_12) {
                  if (_12 instanceof Playing && _12.value0.path instanceof Data_List.Cons) {
                      if (testCollision(Data_Maybe_Unsafe.fromJust(Data_List_Lazy.head(_12.value0.level)))(_12.value0.path)) {
                          return new Waiting({
                              path: _12.value0.path, 
                              nextLevel: _12.value0.level
                          });
                      };
                      if (Prelude["=="](Prelude.eqBoolean)(Prelude["=="](eqDirection)(_12.value0.direction)(Up.value))(inputs.space)) {
                          var _45 = move(Data_Maybe_Unsafe.fromJust(Data_List_Lazy.head(_12.value0.level)))(_12.value0.path.value0)(inputs.space);
                          if (_45 instanceof Data_Maybe.Just) {
                              return playing(new Data_List.Cons(_45.value0, _12.value0.path.value1))(_12.value0.level)(inputs);
                          };
                          if (_45 instanceof Data_Maybe.Nothing) {
                              return initialState(Data_Maybe_Unsafe.fromJust(Data_List_Lazy.tail(_12.value0.level)));
                          };
                          throw new Error("Failed pattern match at Main line 103, column 1 - line 215, column 28: " + [ _45.constructor.name ]);
                      };
                      if (Prelude.otherwise) {
                          return playing(new Data_List.Cons(_12.value0.path.value0, new Data_List.Cons(_12.value0.path.value0, _12.value0.path.value1)))(_12.value0.level)(inputs);
                      };
                  };
                  if (_12 instanceof Waiting) {
                      if (inputs.space) {
                          return newGame(_12.value0.nextLevel);
                      };
                      if (!inputs.space) {
                          return _12;
                      };
                      throw new Error("Failed pattern match at Main line 103, column 1 - line 215, column 28: " + [ inputs.space.constructor.name ]);
                  };
                  throw new Error("Failed pattern match at Main line 103, column 1 - line 215, column 28: " + [ inputs.constructor.name, _12.constructor.name ]);
              };
          };
          var background = function (levels_1) {
              return Prelude["void"](Control_Monad_Eff.functorEff)((function () {
                  var level = Data_Maybe_Unsafe.fromJust(Data_List_Lazy.head(levels_1));
                  return function __do() {
                      Graphics_Canvas.setFillStyle("black")(_7)();
                      Graphics_Canvas.fillRect(_7)({
                          x: 0.0, 
                          y: 0.0, 
                          w: 1.0, 
                          h: 1.0
                      })();
                      Graphics_Canvas.setStrokeStyle("lightgreen")(_7)();
                      Graphics_Canvas.strokeRect(_7)({
                          x: 5.0e-2, 
                          y: 0.25, 
                          w: 0.9, 
                          h: 0.5
                      })();
                      Graphics_Canvas.strokeRect(_7)({
                          x: 4.5e-2, 
                          y: 0.24500000000000002, 
                          w: 0.9099999999999999, 
                          h: 0.51
                      })();
                      Graphics_Canvas.setFillStyle("lightgreen")(_7)();
                      Graphics_Canvas.fillRect(_7)({
                          x: 4.5e-2, 
                          y: 0.5 - level.door / 2.0, 
                          w: 5.0e-3, 
                          h: level.door
                      })();
                      Graphics_Canvas.fillRect(_7)({
                          x: 0.95, 
                          y: 0.5 - level.door / 2.0, 
                          w: 5.0e-3, 
                          h: level.door
                      })();
                      Graphics_Canvas.setFillStyle("#222")(_7)();
                      Graphics_Canvas.setStrokeStyle("lightgreen")(_7)();
                      return Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_List.foldableList)(level.stars)(function (star) {
                          var path = function __do() {
                              Graphics_Canvas.arc(_7)({
                                  x: star.x, 
                                  y: star.y, 
                                  r: star.r, 
                                  start: 0.0, 
                                  end: $$Math.pi * 2.0
                              })();
                              return Graphics_Canvas.closePath(_7)();
                          };
                          return function __do() {
                              Graphics_Canvas.fillPath(_7)(path)();
                              return Graphics_Canvas.strokePath(_7)(path)();
                          };
                      })();
                  };
              })());
          };
          var render = function (_14) {
              if (_14 instanceof Waiting) {
                  return Prelude["void"](Control_Monad_Eff.functorEff)(function __do() {
                      background(_14.value0.nextLevel)();
                      return renderPath(_14.value0.path)();
                  });
              };
              if (_14 instanceof Playing) {
                  return Prelude["void"](Control_Monad_Eff.functorEff)(function __do() {
                      background(_14.value0.level)();
                      return renderPath(_14.value0.path)();
                  });
              };
              throw new Error("Failed pattern match at Main line 103, column 1 - line 215, column 28: " + [ _14.constructor.name ]);
          };
          var loop = function (state) {
              return function __do() {
                  render(state)();
                  var _5 = Control_Monad_Eff_Ref.readRef(_6)();
                  return DOM_RequestAnimationFrame.requestAnimationFrame(loop(update(_5)(state)))();
              };
          };
          return loop(initialState(levels))();
      };
      throw new Error("Failed pattern match at Main line 103, column 1 - line 215, column 28: " + [ _8.constructor.name ]);
  };
  exports["Playing"] = Playing;
  exports["Waiting"] = Waiting;
  exports["Up"] = Up;
  exports["Down"] = Down;
  exports["main"] = main;
  exports["levels"] = levels;
  exports["unsafeLevel"] = unsafeLevel;
  exports["decay"] = decay;
  exports["subtract"] = subtract;
  exports["len2"] = len2;
  exports["dist2"] = dist2;
  exports["eqDirection"] = eqDirection;
  exports["onSpaceBar"] = $foreign.onSpaceBar;;
 
})(PS["Main"] = PS["Main"] || {});

